package 设计模式.结构型模式.享元模式;

/**
 * 具体享元角色，实现抽象享元角色中所规定的接口
 */
public class 圆形类 implements 图形类{

    private String 颜色;
    private Double 半径; // 此内部属性在多线程中会引起线程安全问题

    public 圆形类(String 颜色) {
        this.颜色 = 颜色;
    }

    /*
        此属性需要通过客户程序给出，但又属于享元对象的内部属性，当在多线程下，一个线程修改了`半径`属性，其他线程中的享元对象的该属性也会改变
        解决办法:可以将"半径"属性去除，在绘画方法中添加"面积"参数，这样就得到了外部属性"面积"，而半径可以通过面积与π得出
     */
    public void 设置半径(Double 半径) {
        this.半径 = 半径;;
    }

    @Override
    public void 绘画(坐标类 坐标) {
        // .2f 保留小数点后两位
        System.out.printf("【%s】圆形：坐标(%.2f,%.2f) 半径%.2f \n",颜色,坐标.获取坐标x(),坐标.获取坐标y(),半径);
    }
}
